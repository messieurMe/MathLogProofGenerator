fun String.change(kekich: Boolean = true): Int {
    return if (printOrNot && kekich) {
        println(this).let { 0 }
    } else {
        pp.parse(this).hashCode()
    }
}

var pp = FinalParser()
var isWas: HashMap<String, FinalExpression?> = HashMap()

var printOrNot = false

class CreateProofBase {

    @NewProof("&", "true", "true", "andTT")
    fun andTT(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            a.change(),
            b.change(),
            "$a->$b->($a&$b)".change(),
            "$b->($a&$b)".change(),
            "($a&$b)".change()
        )
    }

    @NewProof("&", "true", "false")
    fun andTF(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "$a".change(),
            "!$b".change(),
            "!$b->($a&$b)->!$b".change(),
            "($a&$b)->!$b".change(),
            "($a&$b)->$b".change(),
            "($a&$b->$b)->($a&$b->!$b)->!($a&$b)".change(),
            "($a&$b->!$b)->!($a&$b)".change(),
            "!($a&$b)".change()
        )

    }

    @NewProof("&", "false", "true")
    fun andFT(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "!$a".change(),
            "!$a->($a&$b)->!$a".change(),
            "($a&$b)->!$a".change(),
            "($a&$b)->$a".change(),
            "($a&$b->$a)->($a&$b->!$a)->!($a&$b)".change(),
            "($a&$b->!$a)->!($a&$b)".change(),
            "!($a&$b)".change()
        )

    }

    @NewProof("&", "false", "false")
    fun andFF(ex: Int) = andFT(ex)


    @NewProof("|", "true", "true")
    fun orTT(ex: Int) = orTF(ex)

    @NewProof("|", "true", "false")
    fun orTF(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "$a".change(),
            "$a->($a|$b)".change(),
            "($a|$b)".change()
        )
    }

    @NewProof("|", "false", "true")
    fun orFT(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "$b".change(),
            "$b->($a|$b)".change(),
            "($a|$b)".change()
        )
    }

    @NewProof("|", "false", "false")
    fun orFF(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "(!$a)".change(),
            "(!$b)".change(),
            "((!$b)->($b->(!$b)))".change(),
            "($b->(!$b))".change(),
            "(($a->$a)->(($b->$a)->(($a|$b)->$a)))".change(),
            "($a->($a->$a))".change(),
            "(($a->($a->$a))->(($a->(($a->$a)->$a))->($a->$a)))".change(),
            "(($a->(($a->$a)->$a))->($a->$a))".change(),
            "($a->(($a->$a)->$a))".change(),
            "($a->$a)".change(),
            "!$b->!$a->!$b".change(),
            "((!$a)->(($a|$b)->(!$a)))".change(),
            "($b->((!$a)->$b))".change(),
            "(($b->$a)->(($a|$b)->$a))".change(),
            "((!$b->(!$a->!$b))->(($b)->(!$b->(!$a->!$b))))".change(),
            "($b->((!$b)->((!$a)->(!$b))))".change(),
            "(($b->(!$b))->(($b->((!$b)->((!$a)->(!$b))))->($b->((!$a)->(!$b)))))".change(),
            "(($b->((!$b)->((!$a)->(!$b))))->($b->((!$a)->(!$b))))".change(),
            "($b->((!$a)->(!$b)))".change(),
            "((((!$a)->$b)->(((!$a)->(!$b))->(!(!$a))))->($b->(((!$a)->$b)->(((!$a)->(!$b))->(!(!$a))))))".change(),
            "(($b->(!(!$a)))->(($b->((!(!$a))->$a))->($b->$a)))".change(),
            "(((!$a)->$b)->(((!$a)->(!$b))->(!(!$a))))".change(),
            "((!(!$a))->$a)".change(),
            "($b->(((!$a)->$b)->(((!$a)->(!$b))->(!(!$a)))))".change(),
            "(($b->((!$a)->(!$b)))->(($b->(((!$a)->(!$b))->(!(!$a))))->($b->(!(!$a)))))".change(),
            "(($b->(((!$a)->(!$b))->(!(!$a))))->($b->(!(!$a))))".change(),
            "(($b->((!$a)->$b))->(($b->(((!$a)->$b)->(((!$a)->(!$b))->(!(!$a)))))->($b->(((!$a)->(!$b))->(!(!$a))))))".change(),
            "(($b->(((!$a)->$b)->(((!$a)->(!$b))->(!(!$a)))))->($b->(((!$a)->(!$b))->(!(!$a)))))".change(),
            "(((!(!$a))->$a)->($b->((!(!$a))->$a)))".change(),
            "($b->((!(!$a))->$a))".change(),
            "($b->(((!$a)->(!$b))->(!(!$a))))".change(),
            "($b->(!(!$a)))".change(),
            "(($b->((!(!$a))->$a))->($b->$a))".change(),
            "($b->$a)".change(),
            "(($a|$b)->$a)".change(),
            "((($a|$b)->$a)->((($a|$b)->(!$a))->(!($a|$b))))".change(),
            "((($a|$b)->(!$a))->(!($a|$b)))".change(),
            "(($a|$b)->(!$a))".change(),
            "(!($a|$b))".change()
        )
    }


    @NewProof("->", "true", "true")
    fun imTT(ex: Int) = imFT(ex)

    @NewProof("->", "false", "true")
    fun imFT(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "$b".change(),
            "$b->$a->$b".change(),
            "($a->$b)".change()
        )
    }

    @NewProof("->", "true", "false")
    fun imTF(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "$a".change(),
            "!$b".change(),
            "((($a)->($b))->((($a)->($b))->(($a)->($b))))".change(),
            "(((($a)->($b))->((($a)->($b))->(($a)->($b))))->(((($a)->($b))->(((($a)->($b))->(($a)->($b)))->(($a)->($b))))->((($a)->($b))->(($a)->($b)))))".change(),
            "(((($a)->($b))->(((($a)->($b))->(($a)->($b)))->(($a)->($b))))->((($a)->($b))->(($a)->($b))))".change(),
            "((($a)->($b))->(((($a)->($b))->(($a)->($b)))->(($a)->($b))))".change(),
            "((($a)->($b))->(($a)->($b)))".change(),
            "$a->($a->$b)->$a".change(),
            "($a->$b)->$a".change(),
            "(($a->$b)->$a)->(($a->$b)->($a->$b))->(($a->$b)->$b)".change(),
            "(($a->$b)->($a->$b))->(($a->$b)->$b)".change(),
            "($a->$b)->$b".change(),
            "!$b->($a->$b)->!$b".change(),
            "($a->$b)->!$b".change(),
            "(($a->$b)->$b)->(($a->$b)->!$b)->!($a->$b)".change(),
            "(($a->$b)->!$b)->!($a->$b)".change(),
            "!($a->$b)".change()
        )
    }

    @NewProof("->", "false", "false")
    fun imFF(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        return arrayListOf(
            "((!$a)->($a->(!$a)))".change(),
            "(!$a)".change(),
            "($a->(!$a))".change(),
            "((!(!$b))->$b)".change(),
            "((((!$b)->$a)->(((!$b)->(!$a))->(!(!$b))))->($a->(((!$b)->$a)->(((!$b)->(!$a))->(!(!$b))))))".change(),
            "(((!$b)->$a)->(((!$b)->(!$a))->(!(!$b))))".change(),
            "($a->(((!$b)->$a)->(((!$b)->(!$a))->(!(!$b)))))".change(),
            "(((!$a)->((!$b)->(!$a)))->($a->((!$a)->((!$b)->(!$a)))))".change(),
            "((!$a)->((!$b)->(!$a)))".change(),
            "(($a->(!$a))->(($a->((!$a)->((!$b)->(!$a))))->($a->((!$b)->(!$a)))))".change(),
            "($a->((!$a)->((!$b)->(!$a))))".change(),
            "(($a->((!$a)->((!$b)->(!$a))))->($a->((!$b)->(!$a))))".change(),
            "(($a->((!$b)->$a))->(($a->(((!$b)->$a)->(((!$b)->(!$a))->(!(!$b)))))->($a->(((!$b)->(!$a))->(!(!$b))))))".change(),
            "($a->((!$b)->$a))".change(),
            "(($a->(((!$b)->$a)->(((!$b)->(!$a))->(!(!$b)))))->($a->(((!$b)->(!$a))->(!(!$b)))))".change(),
            "($a->((!$b)->(!$a)))".change(),
            "(($a->((!$b)->(!$a)))->(($a->(((!$b)->(!$a))->(!(!$b))))->($a->(!(!$b)))))".change(),
            "(($a->(((!$b)->(!$a))->(!(!$b))))->($a->(!(!$b))))".change(),
            "($a->(((!$b)->(!$a))->(!(!$b))))".change(),
            "($a->(!(!$b)))".change(),
            "(($a->(!(!$b)))->(($a->((!(!$b))->$b))->($a->$b)))".change(),
            "(((!(!$b))->$b)->($a->((!(!$b))->$b)))".change(),
            "($a->((!(!$b))->$b))".change(),
            "(($a->((!(!$b))->$b))->($a->$b))".change(),
            "($a->$b)".change()
        )
    }


    @NewProof("DoubleNeg", "", "")
    fun doubleNegate(ex: Int): ArrayList<Int> {
        var a = ex.getEx().stringView()
        return arrayListOf(
            "($a)->(!!!($a)->($a))".change(),
            "($a)".change(),
            "!!!($a)->($a)".change(),
            "!!!($a)->!($a)".change(),
            "(!!!($a)->($a))->((!!!($a)->!($a))->!!!!($a))".change(),
            "(!!!($a)->!($a))->!!!!($a)".change(),
            "!!!!($a)".change(),
            "!!!!($a)->!!($a)".change(),
            "!!($a)".change()
        )
    }


    @NewProof("DedA", "", "")
    fun dedA(varName: String, exe: Int): ArrayList<Int> {
        var a = "($varName)"
        var b = exe.getEx().stringView()
        return arrayListOf(
            "($b)".change(),
            "$b->(($a)->$b)".change(),
            "$a->$b".change(false)
        )
    }

    @NewProof("DedH", "", "")
    fun dedH(a: String): ArrayList<Int> {
        return arrayListOf(
            "$a->($a->$a)".change(),
            "($a->($a->$a))->($a->($a->$a)->$a)->($a->$a)".change(),
            "($a->($a->$a)->$a)->($a->$a)".change(),
            "$a->($a->$a)->$a".change(),
            "$a->$a".change(false)
        )
    }

    @NewProof("DedMP", "", "")
    fun dedMP(a: String, modusPonus: Int): ArrayList<Int> {
        val b = modusPonus.getEx()
        val bl = b.gL()!!.stringView()
        val br = b.gR()!!.stringView()
        return arrayListOf(
            "($a->$bl)->($a->$bl->$br)->($a->$br)".change(),
            "($a->$bl->$br)->($a->$br)".change(),
            "$a->$br".change(false)
        )
    }


    @NewProof("FinisherH", "", "")
    fun finisherH(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        "$a".change()
        "$a->$b".change()
        "$b".change()
        return arrayListOf(0)
    }

    @NewProof("FinisherA", "", "")
    fun finisherA(ex: Int): ArrayList<Int> {
        val a = ex.getEx().gL()!!.stringView()
        val b = ex.getEx().gR()!!.stringView()
        "($a->$b)".change()
        "((!$a)->$b)".change()
        "($a->($a|(!$a)))".change()
        "((!($a|(!$a)))->($a->(!($a|(!$a)))))".change()
        "((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))".change()
        "(($a->$b)->(((!$a)->$b)->(($a|(!$a))->$b)))".change()
        "(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))".change()
        "(($a->($a|(!$a)))->((!($a|(!$a)))->($a->($a|(!$a)))))".change()
        "(((!($a|(!$a)))->($a->(!($a|(!$a)))))->(($a->($a|(!$a)))->((!($a|(!$a)))->($a->(!($a|(!$a)))))))".change()
        "(((!($a|(!$a)))->($a->(!($a|(!$a)))))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))".change()
        "((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->(($a->($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))".change()
        "(((!($a|(!$a)))->($a->($a|(!$a))))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))".change()
        "((((!($a|(!$a)))->($a->(!($a|(!$a)))))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))->(($a->($a|(!$a)))->(((!($a|(!$a)))->($a->(!($a|(!$a)))))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))))".change()
        "((($a->($a|(!$a)))->((!($a|(!$a)))->($a->(!($a|(!$a))))))->((($a->($a|(!$a)))->(((!($a|(!$a)))->($a->(!($a|(!$a)))))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a)))))->(($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))))".change()
        "((((!($a|(!$a)))->($a->($a|(!$a))))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))->(($a->($a|(!$a)))->(((!($a|(!$a)))->($a->($a|(!$a))))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))))".change()
        "(((!$a)->$b)->(($a|(!$a))->$b))".change()
        "(($a|(!$a))->$b)".change()
        "(($a->($a|(!$a)))->(((!($a|(!$a)))->($a->(!($a|(!$a)))))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a)))))".change()
        "(($a->($a|(!$a)))->((!($a|(!$a)))->($a->(!($a|(!$a))))))".change()
        "((($a->($a|(!$a)))->(((!($a|(!$a)))->($a->(!($a|(!$a)))))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a)))))->(($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a)))))".change()
        "((($a->($a|(!$a)))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))->(($a->($a|(!$a)))->((!($a|(!$a)))->(!$a)))))".change()
        "((($a->($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((($a->($a|(!$a)))->((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))->(($a->($a|(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))))".change()
        "(($a->($a|(!$a)))->(((!($a|(!$a)))->($a->($a|(!$a))))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))".change()
        "((($a->($a|(!$a)))->((!($a|(!$a)))->($a->($a|(!$a)))))->((($a->($a|(!$a)))->(((!($a|(!$a)))->($a->($a|(!$a))))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))->(($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))))".change()
        "(($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))".change()
        "(((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))->(($a->($a|(!$a)))->((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))))".change()
        "((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))".change()
        "((!$a)->($a|(!$a)))".change()
        "((((!$a)->($a|(!$a)))->((!($a|(!$a)))->((!$a)->($a|(!$a)))))->((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->($a|(!$a))))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))->(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))))".change()
        "((($a->($a|(!$a)))->(((!($a|(!$a)))->($a->($a|(!$a))))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))->(($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))".change()
        "(($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))".change()
        "(((!$a)->($a|(!$a)))->((!($a|(!$a)))->((!$a)->($a|(!$a)))))".change()
        "((((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))->(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))))".change()
        "((($a->($a|(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))->((($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))->(($a->($a|(!$a)))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))".change()
        "((((!$a)->($a|(!$a)))->((!($a|(!$a)))->((!$a)->(!($a|(!$a))))))->((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a))))))->(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))))".change()
        "((((!($a|(!$a)))->((!$a)->($a|(!$a))))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))->(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->($a|(!$a))))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))))".change()
        "(($a->($a|(!$a)))->((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))".change()
        "(($a->($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))".change()
        "(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))".change()
        "(((!($a|(!$a)))->(!$a))->(((!($a|(!$a)))->(!(!$a)))->(!(!($a|(!$a))))))".change()
        "(((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))".change()
        "((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))".change()
        "((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->(((!$a)->($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))".change()
        "((($a->($a|(!$a)))->((($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))->(($a->($a|(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))))".change()
        "(((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))))".change()
        "(($a->($a|(!$a)))->((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))".change()
        "((($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))->(($a->($a|(!$a)))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))))".change()
        "(((!($a|(!$a)))->((!$a)->($a|(!$a))))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))".change()
        "(($a->($a|(!$a)))->((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a))))".change()
        "((($a->($a|(!$a)))->(((!($a|(!$a)))->(($a->(!($a|(!$a))))->(!$a)))->((!($a|(!$a)))->(!$a))))->(($a->($a|(!$a)))->((!($a|(!$a)))->(!$a))))".change()
        "(($a->($a|(!$a)))->((!($a|(!$a)))->(!$a)))".change()
        "((!($a|(!$a)))->(!$a))".change()
        "(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a))))))".change()
        "(((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))->(((!$a)->($a|(!$a)))->((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))))".change()
        "(((!$a)->($a|(!$a)))->((!($a|(!$a)))->((!$a)->(!($a|(!$a))))))".change()
        "((((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))->((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))".change()
        "((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->(!($a|(!$a)))))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a))))))->(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a))))))".change()
        "((((!$a)->($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((((!$a)->($a|(!$a)))->((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))))".change()
        "(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))".change()
        "(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->($a|(!$a))))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))".change()
        "((((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(!(!$a))))))".change()
        "((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->((!$a)->($a|(!$a))))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))->(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))".change()
        "(((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))".change()
        "(((!$a)->($a|(!$a)))->((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))".change()
        "(((!$a)->($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))".change()
        "((((!$a)->($a|(!$a)))->((((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))))".change()
        "(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))".change()
        "((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))))".change()
        "(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a)))))".change()
        "((((!$a)->($a|(!$a)))->(((!($a|(!$a)))->(((!$a)->(!($a|(!$a))))->(!(!$a))))->((!($a|(!$a)))->(!(!$a)))))->(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(!(!$a)))))".change()
        "(((!$a)->($a|(!$a)))->((!($a|(!$a)))->(!(!$a))))".change()
        "((!($a|(!$a)))->(!(!$a)))".change()
        "(((!($a|(!$a)))->(!(!$a)))->(!(!($a|(!$a)))))".change()
        "(!(!($a|(!$a))))".change()
        "((!(!($a|(!$a))))->($a|(!$a)))".change()
        "($a|(!$a))".change()
        "$b".change()

        return arrayListOf(0)
    }

}
